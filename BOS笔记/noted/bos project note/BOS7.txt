1、使用combobox方式动态获取收派时间
如下只显示name这个属性，下拉框使用select宽度太窄换成input，data-options="editable:false"设置输入框不可编辑
	<tr>
		<td>选择收派时间</td>
		<td>
			<input required="true" class="easyui-combobox"  name="takeTimeId"
				data-options="editable:false, url:'../../takeTimeAction_listajax.action',valueField:'id',textField:'name'">
			</input>
		</td>
	</tr>
	
2、关联快递员到定区
(1)从页面将定区ID、快递员ID、收派时间ID传递到后台，后台接收到这些数据后查询出这3个id对应的对象，并设置他们之间的关系，关系根据bean实体里面的属性和注解来确定,确定好他们之间的关系后会在对应的表里面插入相应的数据，一对多在多的一方插入一的一方的主键ID，这个键是外键，而多对多的关系则在中间表生成一条包含他们两个外键的记录。
(2)根据快递员bean实体里面的属性：
	@ManyToOne
	@JoinColumn(name = "C_TAKETIME_ID")
	private TakeTime takeTime;
可知，快递员和时间表是多对一的关系，快递员是多的一方，快递员表的时间ID字段作为外键指向时间表

(3)由快递员bean实体里面的属性：
	@ManyToMany(mappedBy = "couriers")
	private Set<FixedArea> fixedAreas = new HashSet<FixedArea>();
可知，快递员和定区是多对多的关系,所以在设置多对多关系时会在中间表：T_FIXEDAREA_COURIER中新建一条记录

设置三者之间关系的代码如下：
	
	@Autowired
    private FixedAreaDAO fixedAreaDAO;
    @Autowired
    private CourierDAO courierDAO;
    @Autowired
    private TakeTimeDAO takeTimeDAO;
	
	public void associationCourierToFixedArea(String id, Integer courierId, Integer takeTimeId) {
		//先根据id获取对应的对象，这些对象用于建立关系
        FixedArea fixedArea = fixedAreaDAO.findOne(id);
        Courier courier = courierDAO.findOne(courierId);
		TakeTime takeTime = takeTimeDAO.findOne(takeTimeId);
		
        // 建立定区和快递员的关系，只需要在两方中的任意一方向另一方建立关系即可
		// 如果双方都向另一方建立关系，则会出现向中间表重复插入相同数据的问题(也可用放弃外键维护方式解决)
        fixedArea.getCouriers().add(courier);	//如果从fixedArea方向不行就从courier方向建立
        
        // 建立快递员和时间表的关系
        courier.setTakeTime(takeTime);
    }
	
3、校验用户手机号并发送验证码JS功能代码
(说明：切记JS使用正则表达式时\d要写成\\d)
	<script type="text/javascript">
		var clock = '';
		var nums = 60;
		var btn;
		function sendCode(thisBtn) {
			var telephone = $("#telephone").val();
			var reg = new RegExp("^1[34578]\\d{9}$");	//或者使用"^1[34578][0-9]{9}$"
			var result = reg.test(telephone);
			if(result){
				btn = thisBtn;
				btn.disabled = true; //将按钮置为不可点击
				btn.value = nums + '秒后重新获取';
				clock = setInterval(doLoop, 1000); //一秒执行一次

				//发送请求,发送验证码
				$.post("customerAction_sendCode.action", // URL
					"telephone=" + telephone, // 请求参数
					function(data) {
						if(data == "error") {
							alert("验证码发送失败,请重试")
						}
					}, //回调函数
					"json"
				)
			}
		}
		function doLoop() {
			nums--;
			if (nums > 0) {
				btn.value = nums + '秒后重新获取';
			} else {
				clearInterval(clock); //清除js定时器
				btn.disabled = false;
				btn.value = '重新获取验证码';
				nums = 60; //重置时间
			}
		}
	</script>
	
4、web工程要想使用struts2框架，包名必须命名为含有.action结尾的格式

5、定区关联分区功能实现
(1)在FixedAreaAction里面添加assignSubArea2FixedArea()方法，可以直接使用模型驱动接收FixedArea的ID
(2)action接收前端页面传递过来的分区id使用字符串数组：List<String> subAreaIds 否则可能会提示找不到action的错误
(3)设置关联关系的sql语句(使用原始SQL)：
	@Modifying
    @Query(value="update T_SUB_AREA set C_FIXEDAREA_ID=? where C_ID=?",nativeQuery=true)
    void updateFixedAreaIdByCustomerId(String id, String string);